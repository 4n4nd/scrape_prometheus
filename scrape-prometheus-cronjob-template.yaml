apiVersion: v1
kind: Template
metadata:
  name: scrape-prometheus-cronjob
parameters:
- description: The name for job
  from: 'scrape-prometheus-[a-z0-9]{4}'
  generate: expression
  name: APPLICATION_NAME
  required: true
- name: URL
  description: URL of prometheus server
  required: true
- name: BEARER_TOKEN
  description: Bearer Token for accessing prometheus
  required: true
- name: SCHEDULE
  description: Schedule for the cronjob
  value: '1 0 * * *'
objects:
- apiVersion: batch/v2alpha1
  kind: CronJob
  metadata:
    labels:
      run: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec:
    concurrencyPolicy: Forbid
    suspend: true
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 3
    jobTemplate:
      metadata:
        creationTimestamp: null
      spec:
        template:
          metadata:
            creationTimestamp: null
            labels:
              run: "${APPLICATION_NAME}"
          spec:
            containers:
            - image: durandom/scrape-prometheus
              name: "${APPLICATION_NAME}"
              imagePullPolicy: Always
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              concurrencyPolicy: Forbid
              resources:
                limits:
                  cpu: '1'
                  memory: 4Gi
                requests:
                  cpu: '1'
                  memory: 2Gi
              env:
              - name: PROM_BACKUP_ALL
                value: "true"
              - name: BEARER_TOKEN
                value: "${BEARER_TOKEN}"
              - name: URL
                value: "${URL}"
            dnsPolicy: ClusterFirst
            restartPolicy: Never
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30
    schedule: "${SCHEDULE}"
    suspend: false