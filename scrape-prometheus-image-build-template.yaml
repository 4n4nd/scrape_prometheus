apiVersion: v1
kind: Template
metadata:
  name: scrape-prometheus-job


objects:

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    dockerImageRepository: ${APPLICATION_NAME}
    tags:
    - name: latest
    lookupPolicy:
      local: true


- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    resources:
      limits:
        memory: 1Gi
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      git:
        uri: ${GIT_URI}
      type: Git
    strategy:
      type: Source
      sourceStrategy:
        env:
        - name: APP_FILE
          value: 'app.py'
        - name: GIT_SSL_NO_VERIFY
          value: 'true'
        forcePull: true
        from:
          kind: DockerImage
          name: 'docker.io/centos/python-36-centos7:latest'
    triggers:
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
      type: "GitLab"
        gitlab:
          secretReference:
            name: "scrape-prometheus-githook"

parameters:
- description: The name for job
  from: 'scrape-prometheus-[a-z0-9]{4}'
  generate: expression
  name: APPLICATION_NAME
  required: true
- name: GIT_URI
  value: "https://gitlab.cee.redhat.com/asanmukh/scrape_prometheus"
  required: true
# - apiVersion: batch/v1
#   kind: Job
#   metadata:
#     name: ${APPLICATION_NAME}
#     labels:
#       app: ${APPLICATION_NAME}
#   spec:
#     parallelism: 1
#     completions: 1
#     template:
#       metadata:
#         name: ${APPLICATION_NAME}
#       spec:
#         containers:
#         - name: ${APPLICATION_NAME}
#           image: ${APPLICATION_NAME}:latest
# #          image: 172.30.1.1:5000/local/insights-ds-parsers-cronjob # minishift doesn't have default
#           imagePullPolicy: Always
#           # envFrom:
#           #   - secretRef:
#           #       name: insights-ds-analysis # use secret from application
#           resources:
#             requests:
#               memory: 500Mi
#             limits:
#               memory: 8Gi
#           env:
#           - name: PROM_BACKUP_ALL
#             value: "true"
#           - name: BEARER_TOKEN
#             value: "${BEARER_TOKEN}"
#           - name: URL
#             value: "${URL}"
#           - name: BOTO_ACCESS_KEY
#             value: "${BOTO_ACCESS_KEY}"
#           - name: BOTO_SECRET_KEY
#             value: "${BOTO_SECRET_KEY}"
#           - name: BOTO_OBJECT_STORE
#             value: "${BOTO_OBJECT_STORE}"
#           - name: BOTO_STORE_ENDPOINT
#             value: "${BOTO_STORE_ENDPOINT}"
#         restartPolicy: Never
# - apiVersion: batch/v1
#   kind: Job
#   metadata:
#     name: ${APPLICATION_NAME}
#     labels:
#       app: ${APPLICATION_NAME}
#   spec:
#     parallelism: 1
#     completions: 1
#     template:
#       metadata:
#         name: ${APPLICATION_NAME}
#       spec:
#         containers:
#         - name: ${APPLICATION_NAME}
#           image: docker-registry.default.svc:5000/mhild-test/scrape-prometheus:
#           imagePullPolicy: Always
#           env:
#               - name: PARAMS
#                 value: abc
#           envFrom:
#             - secretRef:
#                 name: ${APPLICATION_NAME}
#         restartPolicy: OnFailure
